Namespace function/object

priv void func ael
priv void func onEOP
priv void func autoa
priv int func autog
priv int func autow
priv int func autoc
priv int func exports
priv int func oWidth
pub obj minref
pub string func minsrv <-

void ael(string type, object/element el, function f){
	type/eventtype
	// addeventlistener
}

void onEOP(function/undefined f){
	// scroll detection
}

void autoa(object/element el, int gw, int gh, int c){
	gw/gutterwidth
	gh/gutterheight
	c/capacity
	// auto-arrange into grids
}

int autog(int maxw, int w, int c){
	maxw/maxwidth
	w/containerwidth
	c/capacity
	// compute automatic gutter
}

int autow(int minw, int g, int c){
	minw/minwidth
	g/gutterwidth
	c/capacity
	// compute automatic container width
}

int autoc(int minw, int maxw, int g, int minc, int maxc){
	minw/minwidth
	maxw/maxwidth
	g/gutterwidth
	minc/mincapacity
	maxc/maxcapacity
	// compute automatic container capacity
}

int exports(array collection, object/element el, string html){
	// append html
}

int oWidth(object/element el, boolean bool){
	// get element width with, without css
}

string minsrv(string href, string html, function/undefined f){
	f(object){
		object.imports // no. of items moved into restore
		object.exports // no. of items loaded in iframe
		object.type // event type
		object.anchor // reference element for reconstructing urls
		object.width // implicit width
		object.minwidth // css width
		object.maxwidth // containing width
		object.capacity // implicit no. of fitable items
		object.mincapacity // minimum no. of fitable items
		object.maxcapacity // maximum no. of fitable items
		object.gutter // implicit gutter spacing
		object.gutterwidth // gutter spacing x
		object.gutterheight // gutter spacing y
		object.flag // indicates grid method fired
		object.serve(string id) // call another minserver
		object.target(object event) // reference function sets 'target' on anchor elements
		object.preventDefault() // prevent further updates
		object.overwrite() // overwrite restore when fired
		object.set(string key, mixed value) // set property with validation
		object.grid(string key, mixed value) // initialise grid setting and constants
	}
	// returns unique id, initialise, manage windows
}